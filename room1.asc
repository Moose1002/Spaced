// room script file

ParticleDefinition* GetSmokeParticle()
{
  ParticleDefinition* smokeParticle = new ParticleDefinition;
  smokeParticle.Sprite = 55;
  smokeParticle.LifeTotal = 60+Random(14);
  smokeParticle.VelY = -1000-Random(1000);
  smokeParticle.VelX = Random(500) - 500;
  smokeParticle.TransparencyBegin = 80;
  smokeParticle.TransparencyEnd = 100;
  smokeParticle.WidthBegin = 8+Random(2);
  smokeParticle.WidthEnd = 20+Random(2);
  smokeParticle.HeightBegin = 8+Random(2);
  smokeParticle.HeightEnd = 10+Random(2);
  return smokeParticle;
}

Emitter smokeEmitter;

bool roomLit = true;

function room_Load()
{
  // Particle Init
  int defs_count = 512;
  ParticleDefinition *defs[] = new ParticleDefinition[defs_count];
  for(int i=0; i<defs_count; i++)
  {
    defs[i] = GetSmokeParticle();
  }
  //smokeEmitter.Init(187, 59, defs, defs_count, 32,  64);
  GPE.SetParticleDefinitions(defs, defs_count);
  GPE.SetPosition(53, 170);
  GPE.StartEmitting();
  
  if (OpeningStuck) { player.LockView(2, eStopMoving); }
  if (DoorRepaired) { oDoorControl.Graphic = 19; }
  if (LightsOn) { EnvironmentLit = true; }
}

function oObject0_Look(Object *theObject, CursorMode mode)
{
  if (OpeningStuck)
  {
    cArin.Say("I'm stuck!");
    cArin.Say("I don't think I'll be able to push this off on my own.");
  }
  else
  {
    cArin.Say("I am not going back under there!");
  }
}

function room_AfterFadeIn()
{
  
}

function room_FirstLoad()
{
  RemoveWalkableArea(1);
  WaitMouse(-1);
  dOpening.Start();
}
function room_RepExec()
{
  if (OpeningStuck) {
    if (player.ScriptName == "cArin") RemoveWalkableArea(1);
    else RestoreWalkableArea(1);
  }
}

function oScrewdriver_Interact(Object *theObject, CursorMode mode)
{
  if (OpeningStuck) 
  {
    cArin.Say("I can't reach it!");
    return; 
  }
  AddInventoryHelper(theObject, iScrewdriver);
  Display("The Screwdriver can be used to access circuit boards.");
  Display("To access your inventory hover over the bottom of the screen.");
  Display("To put away an item, \"Right Click\".");
}

function oDoorControl_UseInv(Object *theObject, CursorMode mode)
{
  if (player.ActiveInventory == iScrewdriver) {
    player.Walk(295, 150, eBlock);
    EnterCircuitEditor("DoorController");
    //cArin.on = 0;
  }
}

function oDoorControl_Look(Object *theObject, CursorMode mode)
{
  cArin.Say("That's the door control panel.");
  if (DoorRepaired)
  {
    cArin.Say("It should be functioning now.");
  }
  else
  {
    cArin.Say("Looks shot. If I had a screwdriver I could take a look inside.");
  }
}

function oDoorControl_Talk(Object *theObject, CursorMode mode)
{
  player.Say("It's not that advanced!");
  if (!DoorRepaired)
  {
    cArin.Say("Besides, looks broken anyhow.");
  }
}

function oDoorControl_Interact(Object *theObject, CursorMode mode)
{
  cArin.Say("Can't get into that without a screwdriver.");
}

function oScrewdriver_Look(Object *theObject, CursorMode mode)
{
  cArin.Say("Looks like a screwdriver.");
}

function oScrap_AnyClick(Object *theObject, CursorMode mode)
{
  if (!OpeningStuck) 
  { 
    cArin.Say("Who helped me out of there?");
    return; 
  }
  if (player.ScriptName == "cArin") 
  {
    cArin.Say("I'm stuck!");
    cArin.Say("I don't think I'll be able to push this off on my own.");
  }
  else {
    player.Walk(180, 162, eBlock);
    theObject.TweenY(2.5, theObject.Y + 20);
    OpeningStuck = false;
    RestoreWalkableArea(1);
    cArin.SetAsPlayer();
    cArin.Say("Hey, thanks.");
    cArin.UnlockView();
    cArin.FaceDirection(eDirectionRight);
    Wait(20);
    cArin.Say("Who are you?");
    cShadow.Say("...");
    cArin.Say("What are you?");
    Wait(100);
    EnvironmentLit = false;
    TintScreen(1, 1, 1);
    //cShadow.on = 0;
    IndependentShadow = false;
    cArin.Say("Hello?");
    cArin.Say("Where did he go?");
    cArin.Say("Well there goes the lights.");
    cArin.Say("Maybe I can get the lights back on?");
  }
}

function oDoor_AnyClick(Object *theObject, CursorMode mode)
{
  if (OpeningStuck) {
    cArin.Say("That's the door out of here.");
    cArin.Say("I would leave through it if I weren't under this debris.");
    return;
  }
  player.Walk(295, 150, eBlock);
  if (DoorRepaired)
  {
    player.ChangeRoom(3, 870, 143);
  }
  else
  {
    cArin.Say("Stuck shut?");
    cArin.Say("Looks like the controller's gone bad.");
  }
}

function room_Unload()
{
  GPE.StopEmitting();
}

function oBattery_AnyClick(Object *theObject, CursorMode mode)
{
  if (OpeningStuck) {
    cArin.Say("I can't reach it!");
    return;
  }
  cArin.Walk(99, 148, eBlock);
  cArin.Say("A space age car battery!");
  cArin.Say("Really would have thought we would have innovated that by now...");
  AddInventoryHelper(theObject, iBattery);
}
